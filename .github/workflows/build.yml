name: Build and publish Docker image

on:
  push:
    branches:
      - main
    tags:
      - "v*"
      - "[0-9]+\.[0-9]+\.[0-9]+"
  pull_request:

jobs:
  docker:
    name: Build and push to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare image name (lowercase)
        run: echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          flavor: |
            latest=false

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Make GHCR package public
        if: startsWith(github.ref, 'refs/tags/')
        env:
          OWNER: ${{ github.repository_owner }}
          PACKAGE: ${{ github.event.repository.name }}
          TOKEN: ${{ secrets.GHCR_PAT || secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          echo "Making public: ghcr.io/${OWNER}/${PACKAGE}"
          code=$(curl -sS -o /dev/null -w "%{http_code}" -X PUT \
            -H "Authorization: Bearer ${TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/orgs/${OWNER}/packages/container/${PACKAGE}/visibility \
            -d '{"visibility":"public"}')
          if [ "${code:0:1}" = "2" ]; then
            echo "Visibility updated via org endpoint (HTTP $code)."
            exit 0
          fi
          code=$(curl -sS -o /dev/null -w "%{http_code}" -X PUT \
            -H "Authorization: Bearer ${TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/user/packages/container/${PACKAGE}/visibility \
            -d '{"visibility":"public"}')
          if [ "${code:0:1}" = "2" ]; then
            echo "Visibility updated via user endpoint (HTTP $code)."
            exit 0
          fi
          echo "Warning: could not set package visibility (HTTP $code). Ensure TOKEN has packages:write scope."
